var fs = require("fs");
const path = require("path");

const express = require("express");
const app = express();

// To solve the cors issue
const cors = require("cors");

const notFound = `<html>
<body>
<h1 style="text-align: center; font-family: sans-serif;font-size: 600%;">404 ðŸ˜•</h1>
<p style="text-align: center; font-family: sans-serif;font-size: 300%;">See /apps for available Evergreen apps.</p>
</body>
</html>`;

app.listen(process.env.PORT, () => console.log("Server start, port: " + process.env.PORT));
app.use(express.static("public"));
app.use(cors());

app.get('/', (req, res) => {
	res
		.status(404)
		.send(notFound)
		.end();
});

app.get("/apps", getEvergreen);
app.get("/apps/:name/", getApp);

function getApp(request, response) {
	var word = request.params.name;
	var file = "./json/" + word + ".json"
	console.log("get: /apps/" + word);

	let fileExists = fs.existsSync(file);
	if (fileExists) {
		try {
			var data = fs.readFileSync(file, "utf8");
			var code = 200
		}
		catch (err) {
			var data = "Read error: " + word
			var code = 500
		}
		response
			.status(code)
			.send(data)
			.end();
	}
	else {
		response
			.status(404)
			.send("Does not exist: " + word)
			.end();
	}
}

function getEvergreen(request, response) {
	var file = "./evergreen.json";
	let fileExists = fs.existsSync(file);
	if (fileExists) {
		try {
			var data = fs.readFileSync(file, "utf8");
			var code = 200
		}
		catch (err) {
			var data = "Read error: " + file
			var code = 500
		}
		response
			.status(code)
			.send(data)
			.end();
	}
	else {
		response
			.status(404)
			.send("Does not exist: " + file)
			.end();
	}
}

class NewId {
	constructor(id) {
		this.Name = id;
	}
}